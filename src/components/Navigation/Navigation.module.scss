@use '~@hackthe6ix/vue-ui/Button/Button.module';
@use '~@hackthe6ix/vue-ui/styles/variables';
@use '~@hackthe6ix/vue-ui/styles/mixins';

.container {
  position: fixed;
  z-index: 200;
  width: 100%;
  top: 0;
}

.nav {
  box-shadow: 0px 3px 10px rgba(0, 0, 0, 0.12);
  padding: map-get(variables.$unit, element) 0;
  background-color: var(--white);

  & > div {
    display: flex;
    align-items: center;
  }
}

.apply {
  @extend .button;
  @extend .button--color-teal;
  @extend .button--variant-solid;

  padding: map-get(variables.$unit, element) map-get(variables.$unit, component);
  margin: auto map-get(variables.$unit, component) auto auto;
  color: var(--background) !important;
}

.items {
  @include mixins.transition(opacity);
  background-color: var(--background);
  list-style-type: none;
  display: flex;
  z-index: 1;
  padding: 0;
  margin: 0;

  @include mixins.media(laptop) {
    @include mixins.position(fixed);
    padding: map-get(variables.$unit, component) map-get(variables.$text, large);
    flex-direction: column;
    pointer-events: none;
    text-align: end;
    opacity: 0;

    &--show {
      pointer-events: all;
      opacity: 1;
    }
  }
}

.item {
  @include mixins.transition(border-bottom-color color);
  padding: map-get(variables.$unit, element) map-get(variables.$unit, component) * 1.5;
  border-top: 2px solid transparent;
  border-bottom: 2px solid transparent;
  color: var(--text) !important;
  font-weight: bold;
  display: inline-block;

  &:hover, &:focus {
    color: var(--teal) !important;
    border-bottom-color: var(--teal);
  }

  @include mixins.media(laptop) {
    font-size: map-get(variables.$text, larger) !important;
    padding-right: 0;
  }
}

.disclaimer {
  padding: map-get(variables.$unit, tad);
  background-color: var(--yellow);
}

.menu {
  display: none;
  & svg {
    @include mixins.transition(fill);
    fill: var(--teal);
  }

  &:hover svg,  &:active svg, &:focus svg {
    fill: var(--background);
  }

  @include mixins.media(laptop) {
    display: block;
  }
}